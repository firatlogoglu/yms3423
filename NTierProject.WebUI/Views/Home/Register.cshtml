@model NTierProject.MODEL.Entities.AppUser
@{
    ViewBag.Title = "Kayıt Ol";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">@ViewBag.Title</h6>
        <br />
        <p>Lütfen bilgilerinizi aşağıdaki formu kullanarak doldurun</p>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { @class = "form-signin", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="login-wrap">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.UserName) } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    @if (ViewBag.ExistsUser != null)
                    {
                        <label class="text-danger">@ViewBag.ExistsUser</label>
                    }
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Name) } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.SurName) } })
                    @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Email) } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @if (ViewBag.ExistsEmail != null)
                    {
                        <label class="text-danger">@ViewBag.ExistsEmail</label>
                    }
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Password) } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.ConfirmPassword) } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.PhoneNumber) } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Address) } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.BirthDate) } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Görsel Seç</label>
                    <input type="file" class="form-control" name="ImagePath" required />
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>
                <br />

                <div>
                    <button class="btn btn-lg btn-block btn-success" type="submit">Kayıt Ol</button>
                </div>

            </div>
        }
    </div>
</div>